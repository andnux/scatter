package top.andnux.scatter;

import org.bouncycastle.util.encoders.Hex;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
public class ExampleUnitTest {
    @Test
    public void addition_isCorrect() {
        byte[] decode = Hex.decode("0e656f73696f3a3a6162692f312e31001008636c656172706179000205636f756e740675696e74333208656e645f74696d650675696e74363409636c656172706179320002066d61785f69640675696e7433320c7061795f636865636b73756d0b636865636b73756d3235360c636f6e6669675f7461626c650002036b6579046e616d650576616c756506737472696e670864656c746f6b656e000105746f6b656e0561737365740964656c74726661636300010d627573696e6573735f636f64650675696e7433320a7061795f7265636f7264000b0269640675696e743634096f726465725f6e756d0675696e743634087061795f747970650575696e74380d627573696e6573735f636f64650675696e7433320b7061795f6163636f756e74046e616d650c7061795f7175616e74697479056173736574107472616e736665725f6163636f756e74046e616d65067472785f69640b636865636b73756d3235360c7061795f636865636b73756d0b636865636b73756d323536087061795f74696d650675696e7436340672656d61726b06737472696e67067265636f726400020e6e6f746966795f6163636f756e74046e616d65046461746106737472696e670973657472616d6163630001076163636f756e74046e616d65097365747369676e65720001077075625f6b657906737472696e670973657473746174757300010a6e65775f7374617475730575696e743808736574746f6b656e00040c6d696e5f7175616e746974790561737365740c6d61785f7175616e7469747905617373657404636f6465046e616d6506697373756572046e616d650973657474726661636300020d627573696e6573735f636f64650675696e743332076163636f756e74046e616d650b7369676e696e70726f6f660001067369676e696e06737472696e670b746f6b656e5f7461626c6500050269640675696e74363404636f6465046e616d6506697373756572046e616d650c6d696e5f7175616e746974790561737365740c6d61785f7175616e74697479056173736574107472616e736665725f6163636f756e7400020d627573696e6573735f636f64650675696e743634f7472616e6665725f6163636f756e74046e616d65077573657270617900060466726f6d046e616d650d627573696e6573735f636f64650675696e743332096f726465725f6e756d0675696e74363404747970650575696e74380c7061795f7175616e746974790561737365740672656d61726b06737472696e670c000000ded46b544408636c65617270617900000010ded46b544409636c656172706179320000000053419aa34a0864656c746f6b656e00000040c8ac9ba34a0964656c7472666163630000000000a44b91ba067265636f726400000040c84873b3c20973657472616d616363000000b86a3287b3c2097365747369676e6572000000c03a9b8cb3c2097365747374617475730000000053419ab3c208736574746f6b656e00000040c8ac9bb3c209736574747266616363000016a5b74e3799c30b7369676e696e70726f6f6600000000c09b7a15d6077573657270617900040000000030b726450369363400000c636f6e6669675f7461626c65000000000000bca90369363400000a7061795f7265636f72640000000080a920cd0369363400000b746f6b656e5f7461626c65000000002064d6cd036936340000107472616e736665725f6163636f756e7400000000");
        String s = new String(decode);
        System.out.println(s);
    }
}